// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package btcrelay

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/event"
	"github.com/harmony-one/harmony/accounts/abi"
	"github.com/harmony-one/harmony/accounts/abi/bind"
	"github.com/harmony-one/harmony/core/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BTCRelayABI is the input ABI used to generate the binding from.
const BTCRelayABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newChainTip\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startHeight\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"ChainReorg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"StoreFork\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"StoreHeader\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"name\":\"VerityTransaction\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DIFFICULTY_ADJUSTMENT_INVETVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TARGET_TIMESPAN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TARGET_TIMESPAN_DIV_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TARGET_TIMESPAN_MUL_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNROUNDED_MAX_TARGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_forkCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_headers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainWork\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"lastDiffAdjustment\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_heaviestBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_highScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_lastDiffAdjustmentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_mainChain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ongoingForks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainWork\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"concatSHA256Hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"dblSha\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHeaderHash\",\"type\":\"bytes32\"}],\"name\":\"getBlockHeader\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"time\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"prevBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"getLatestForkHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"getMerkleRootFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"getNBitsFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"getPrevBlockHashFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"getTargetFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"getTimeFromHeader\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"blockHeight\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"chainWork\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDiffAdjustmentTime\",\"type\":\"uint256\"}],\"name\":\"setInitialParent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"submitForkChainHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"submitMainChainHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderBytes\",\"type\":\"bytes\"}],\"name\":\"submitNewForkChainHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHeaderHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"txBlockHeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"merkleProof\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"verifxTX\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHeaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"confirmations\",\"type\":\"uint256\"}],\"name\":\"withinXConfirms\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BTCRelayFuncSigs maps the 4-byte function signature to its string representation.
var BTCRelayFuncSigs = map[string]string{
	"41e00640": "DIFFICULTY_ADJUSTMENT_INVETVAL()",
	"dd86037e": "TARGET_TIMESPAN()",
	"d5fe5558": "TARGET_TIMESPAN_DIV_4()",
	"352b3355": "TARGET_TIMESPAN_MUL_4()",
	"285d84cc": "UNROUNDED_MAX_TARGET()",
	"5b054e2d": "_forkCounter()",
	"9f0ae3c4": "_headers(bytes32)",
	"24780f0f": "_heaviestBlock()",
	"862661ce": "_highScore()",
	"b778c84a": "_lastDiffAdjustmentTime()",
	"1c5c14e0": "_mainChain(uint256)",
	"3f18da79": "_ongoingForks(uint256)",
	"b417d5e2": "concatSHA256Hash(bytes,bytes)",
	"0491cb1e": "dblSha(bytes)",
	"6b4f9b9d": "getBlockHeader(bytes32)",
	"983ef725": "getDifficulty(uint256)",
	"0dcf082d": "getLatestForkHash(uint256)",
	"d9c67404": "getMerkleRoot(bytes)",
	"1196bd62": "getMerkleRootFromHeader(bytes)",
	"56ac9f67": "getNBitsFromHeader(bytes)",
	"5dc4011d": "getPrevBlockHashFromHeader(bytes)",
	"9aeb6306": "getTargetFromHeader(bytes)",
	"336c9142": "getTimeFromHeader(bytes)",
	"f59b328c": "setInitialParent(bytes,uint32,uint256,uint256)",
	"68f5b5be": "submitForkChainHeader(bytes,uint256)",
	"157800e5": "submitMainChainHeader(bytes)",
	"5afb4f4b": "submitNewForkChainHeader(bytes)",
	"a6feda9b": "verifxTX(bytes32,uint256,uint256,bytes,uint256)",
	"bcf53528": "withinXConfirms(bytes32,uint256)",
}

// BTCRelayBin is the compiled bytecode used for deploying new contracts.
var BTCRelayBin = "$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091602460206040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610f88578181015183820152602001610f70565b50505050905090810190601f168015610fb55780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015610fd457600080fd5b505af4158015610fe8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561101157600080fd5b8101908080516040519392919084600160201b82111561103057600080fd5b90830190602082018581111561104557600080fd5b8251600160201b81118282018810171561105e57600080fd5b82525081516020918201929091019080838360005b8381101561108b578181015183820152602001611073565b50505050905090810190601f1680156110b85780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b8381101561112357818101518382015260200161110b565b50505050905090810190601f1680156111505780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561116d57600080fd5b505af4158015611181573d6000803e3d6000fd5b505050506040513d602081101561119757600080fd5b505192915050565b60006111ac826000613fe0565b92915050565b60016020526000908152604090205481565b60025481565b6001600160e01b0381565b60008173__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091604460046040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015611250578181015183820152602001611238565b50505050905090810190601f16801561127d5780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561129c57600080fd5b505af41580156112b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156112d957600080fd5b8101908080516040519392919084600160201b8211156112f857600080fd5b90830190602082018581111561130d57600080fd5b8251600160201b81118282018810171561132657600080fd5b82525081516020918201929091019080838360005b8381101561135357818101518382015260200161133b565b50505050905090810190601f1680156113805780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b838110156113eb5781810151838201526020016113d3565b50505050905090810190601f1680156114185780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b15801561143557600080fd5b505af4158015611449573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561147257600080fd5b8101908080516040519392919084600160201b82111561149157600080fd5b9083019060208201858111156114a657600080fd5b8251600160201b8111828201881017156114bf57600080fd5b82525081516020918201929091019080838360005b838110156114ec5781810151838201526020016114d4565b50505050905090810190601f1680156115195780820380516001836020036101000a031916815260200191505b5060408190526302d06d0560e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976302d06d05975095509093508392604401918501908083836000831561112357818101518382015260200161110b565b6249d40081565b60056020526000908152604090208054600182015460029092015490919083565b6107e081565b60008173__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091604860046040518463ffffffff1660e01b815260040180806020018481526020018381526020018281038252858181518152602001915080519060200190808383600083811015611250578181015183820152602001611238565b600061163782600654613fe0565b60068054600101905592915050565b60065481565b60008173__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091600460206040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156116c75781810151838201526020016116af565b50505050905090810190601f1680156116f45780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561171357600080fd5b505af4158015611727573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561175057600080fd5b8101908080516040519392919084600160201b82111561176f57600080fd5b90830190602082018581111561178457600080fd5b8251600160201b81118282018810171561179d57600080fd5b82525081516020918201929091019080838360005b838110156117ca5781810151838201526020016117b2565b50505050905090810190601f1680156117f75780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b8381101561186257818101518382015260200161184a565b50505050905090810190601f16801561188f5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015610fd457600080fd5b600060088261194e5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b820191906000526020600020905b81548152906001019060200180831161192257829003601f168201915b50509250505060405180910390fd5b506119598383613fe0565b9392505050565b6000818152602081815260408083206002908101805483516001821615610100026000190190911692909204601f810185900485028301850190935282825284938493849384938493606093908301828280156119fe5780601f106119d3576101008083540402835291602001916119fe565b820191906000526020600020905b8154815290600101906020018083116119e157829003601f168201915b505050505090508073__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091600060046040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015611a7e578181015183820152602001611a66565b50505050905090810190601f168015611aab5780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015611aca57600080fd5b505af4158015611ade573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611b0757600080fd5b8101908080516040519392919084600160201b821115611b2657600080fd5b908301906020820185811115611b3b57600080fd5b8251600160201b811182820188101715611b5457600080fd5b82525081516020918201929091019080838360005b83811015611b81578181015183820152602001611b69565b50505050905090810190601f168015611bae5780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b83811015611c19578181015183820152602001611c01565b50505050905090810190601f168015611c465780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015611c6357600080fd5b505af4158015611c77573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611ca057600080fd5b8101908080516040519392919084600160201b821115611cbf57600080fd5b908301906020820185811115611cd457600080fd5b8251600160201b811182820188101715611ced57600080fd5b82525081516020918201929091019080838360005b83811015611d1a578181015183820152602001611d02565b50505050905090810190601f168015611d475780820380516001836020036101000a031916815260200191505b5060408190526302d06d0560e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976302d06d059750955090935083926044019185019080838360005b83811015611db2578181015183820152602001611d9a565b50505050905090810190601f168015611ddf5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611dfc57600080fd5b505af4158015611e10573d6000803e3d6000fd5b505050506040513d6020811015611e2657600080fd5b505160405163700209cb60e11b815260446024820181905260048282018190526060838201908152855160648501528551949b5073__$28c06a71cd48aff62f401ad98e5ea52b1f$__9463e0041396948794939291829160840190602087019080838360005b83811015611ea4578181015183820152602001611e8c565b50505050905090810190601f168015611ed15780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015611ef057600080fd5b505af4158015611f04573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611f2d57600080fd5b8101908080516040519392919084600160201b821115611f4c57600080fd5b908301906020820185811115611f6157600080fd5b8251600160201b811182820188101715611f7a57600080fd5b82525081516020918201929091019080838360005b83811015611fa7578181015183820152602001611f8f565b50505050905090810190601f168015611fd45780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b8381101561203f578181015183820152602001612027565b50505050905090810190601f16801561206c5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b15801561208957600080fd5b505af415801561209d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156120c657600080fd5b8101908080516040519392919084600160201b8211156120e557600080fd5b9083019060208201858111156120fa57600080fd5b8251600160201b81118282018810171561211357600080fd5b82525081516020918201929091019080838360005b83811015612140578181015183820152602001612128565b50505050905090810190601f16801561216d5780820380516001836020036101000a031916815260200191505b5060408190526302d06d0560e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976302d06d059750955090935083926044019185019080838360005b838110156121d85781810151838201526020016121c0565b50505050905090810190601f1680156122055780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561222257600080fd5b505af4158015612236573d6000803e3d6000fd5b505050506040513d602081101561224c57600080fd5b505160405163700209cb60e11b8152604c602482018190526004604483018190526060838201908152855160648501528551949a5073__$28c06a71cd48aff62f401ad98e5ea52b1f$__9463e0041396948794939291829160840190602087019080838360005b838110156122cb5781810151838201526020016122b3565b50505050905090810190601f1680156122f85780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561231757600080fd5b505af415801561232b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561235457600080fd5b8101908080516040519392919084600160201b82111561237357600080fd5b90830190602082018581111561238857600080fd5b8251600160201b8111828201881017156123a157600080fd5b82525081516020918201929091019080838360005b838110156123ce5781810151838201526020016123b6565b50505050905090810190601f1680156123fb5780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b8381101561246657818101518382015260200161244e565b50505050905090810190601f1680156124935780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156124b057600080fd5b505af41580156124c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156124ed57600080fd5b8101908080516040519392919084600160201b82111561250c57600080fd5b90830190602082018581111561252157600080fd5b8251600160201b81118282018810171561253a57600080fd5b82525081516020918201929091019080838360005b8381101561256757818101518382015260200161254f565b50505050905090810190601f1680156125945780820380516001836020036101000a031916815260200191505b5060408190526302d06d0560e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976302d06d059750955090935083926044019185019080838360005b838110156125ff5781810151838201526020016125e7565b50505050905090810190601f16801561262c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561264957600080fd5b505af415801561265d573d6000803e3d6000fd5b505050506040513d602081101561267357600080fd5b505160405163700209cb60e11b8152600460248201819052602060448301819052606083830190815285516064850152855194995073__$28c06a71cd48aff62f401ad98e5ea52b1f$__9463e00413969487949392918291608401908685019080838360005b838110156126f15781810151838201526020016126d9565b50505050905090810190601f16801561271e5780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561273d57600080fd5b505af4158015612751573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561277a57600080fd5b8101908080516040519392919084600160201b82111561279957600080fd5b9083019060208201858111156127ae57600080fd5b8251600160201b8111828201881017156127c757600080fd5b82525081516020918201929091019080838360005b838110156127f45781810151838201526020016127dc565b50505050905090810190601f1680156128215780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b8381101561288c578181015183820152602001612874565b50505050905090810190601f1680156128b95780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156128d657600080fd5b505af41580156128ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561291357600080fd5b8101908080516040519392919084600160201b82111561293257600080fd5b90830190602082018581111561294757600080fd5b8251600160201b81118282018810171561296057600080fd5b82525081516020918201929091019080838360005b8381101561298d578181015183820152602001612975565b50505050905090810190601f1680156129ba5780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b83811015612a25578181015183820152602001612a0d565b50505050905090810190601f168015612a525780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015612a6f57600080fd5b505af4158015612a83573d6000803e3d6000fd5b505050506040513d6020811015612a9957600080fd5b505160405163700209cb60e11b8152602481810181905260206044830181905260606004840190815285516064850152855194985073__$28c06a71cd48aff62f401ad98e5ea52b1f$__9463e00413969487949392918291608401908685019080838360005b83811015612b17578181015183820152602001612aff565b50505050905090810190601f168015612b445780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015612b6357600080fd5b505af4158015612b77573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612ba057600080fd5b8101908080516040519392919084600160201b821115612bbf57600080fd5b908301906020820185811115612bd457600080fd5b8251600160201b811182820188101715612bed57600080fd5b82525081516020918201929091019080838360005b83811015612c1a578181015183820152602001612c02565b50505050905090810190601f168015612c475780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b83811015612cb2578181015183820152602001612c9a565b50505050905090810190601f168015612cdf5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015612cfc57600080fd5b505af4158015612d10573d6000803e3d6000fd5b505050506040513d6020811015612d2657600080fd5b505160405163700209cb60e11b8152604860248201819052600460448301819052606083820190815285516064850152855194975061315d9473__$28c06a71cd48aff62f401ad98e5ea52b1f$__9463e00413969488949093909290918291608490910190602087019080838360005b83811015612dae578181015183820152602001612d96565b50505050905090810190601f168015612ddb5780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015612dfa57600080fd5b505af4158015612e0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612e3757600080fd5b8101908080516040519392919084600160201b821115612e5657600080fd5b908301906020820185811115612e6b57600080fd5b8251600160201b811182820188101715612e8457600080fd5b82525081516020918201929091019080838360005b83811015612eb1578181015183820152602001612e99565b50505050905090810190601f168015612ede5780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b83811015612f49578181015183820152602001612f31565b50505050905090810190601f168015612f765780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015612f9357600080fd5b505af4158015612fa7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612fd057600080fd5b8101908080516040519392919084600160201b821115612fef57600080fd5b90830190602082018581111561300457600080fd5b8251600160201b81118282018810171561301d57600080fd5b82525081516020918201929091019080838360005b8381101561304a578181015183820152602001613032565b50505050905090810190601f1680156130775780820380516001836020036101000a031916815260200191505b5060408190526302d06d0560e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976302d06d059750955090935083926044019185019080838360005b838110156130e25781810151838201526020016130ca565b50505050905090810190601f16801561310f5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561312c57600080fd5b505af4158015613140573d6000803e3d6000fd5b505050506040513d602081101561315657600080fd5b5051614cc6565b91505091939550919395565b60035481565b60008161ffff60d01b8161317f57fe5b0492915050565b60006111ac613194836115af565b614cc6565b6000602081815291815260409081902080546001808301546002808501805487519481161561010002600019011691909104601f810188900488028401880190965285835292959094919291908301828280156132375780601f1061320c57610100808354040283529160200191613237565b820191906000526020600020905b81548152906001019060200180831161321a57829003601f168201915b5050505050908060030154905084565b60006011866132af5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b5060025460009081526020819052604090205460129086900383111561332e5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b506000858152600160208181526040808420548085528483528185206002908101805484519681161561010002600019011691909104601f81018590048502860185019093528285529094936133dc939092908301828280156133d25780601f106133a7576101008083540402835291602001916133d2565b820191906000526020600020905b8154815290600101906020018083116133b557829003601f168201915b5050505050613bed565b9050878573__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091600060206040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015613458578181015183820152602001613440565b50505050905090810190601f1680156134855780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b1580156134a457600080fd5b505af41580156134b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156134e157600080fd5b8101908080516040519392919084600160201b82111561350057600080fd5b90830190602082018581111561351557600080fd5b8251600160201b81118282018810171561352e57600080fd5b82525081516020918201929091019080838360005b8381101561355b578181015183820152602001613543565b50505050905090810190601f1680156135885780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b838110156135f35781810151838201526020016135db565b50505050905090810190601f1680156136205780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561363d57600080fd5b505af4158015613651573d6000803e3d6000fd5b505050506040513d602081101561366757600080fd5b5051601391146136d05760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b5060405163700209cb60e11b815260206024820181905260448201819052606060048301908152875160648401528751849373__$28c06a71cd48aff62f401ad98e5ea52b1f$__9363e0041396938b93919283928291608401908487019080838360005b8381101561374c578181015183820152602001613734565b50505050905090810190601f1680156137795780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561379857600080fd5b505af41580156137ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156137d557600080fd5b8101908080516040519392919084600160201b8211156137f457600080fd5b90830190602082018581111561380957600080fd5b8251600160201b81118282018810171561382257600080fd5b82525081516020918201929091019080838360005b8381101561384f578181015183820152602001613837565b50505050905090810190601f16801561387c5780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b838110156138e75781810151838201526020016138cf565b50505050905090810190601f1680156139145780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561393157600080fd5b505af4158015613945573d6000803e3d6000fd5b505050506040513d602081101561395b57600080fd5b5051601391146139c45760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b50806139d1898888614ce0565b1415613a0f57604051879089907f177452b46e7e4d1f6700a6e9e0c10cecb0552e86e904e5d98c5f41686ca0914290600090a3600192505050613a16565b6000925050505b95945050505050565b6000613ada83836040516020018083805190602001908083835b60208310613a585780518252601f199092019160209182019101613a39565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310613aa05780518252601f199092019160209182019101613a81565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052610d8e565b6040516347f5343160e01b815260206004820181815283516024840152835173__$28c06a71cd48aff62f401ad98e5ea52b1f$__946347f5343194909383926044909201919085019080838360005b83811015613b41578181015183820152602001613b29565b50505050905090810190601f168015613b6e5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015613b8b57600080fd5b505af4158015613b9f573d6000803e3d6000fd5b505050506040513d6020811015613bb557600080fd5b50519392505050565b60045481565b6000828152602081905260408082205460025483529120540381111592915050565b62049d4081565b60008173__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091602460206040518463ffffffff1660e01b8152600401808060200184815260200183815260200182810382528581815181526020019150805190602001908083836000838110156116c75781810151838201526020016116af565b6212750081565b60025460079015613cd85760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b506000613ce485610d8e565b604051630fcc9dc360e31b815260206004820181815283516024840152835173__$28c06a71cd48aff62f401ad98e5ea52b1f$__94637e64ee1894909383926044909201919085019080838360005b83811015613d4b578181015183820152602001613d33565b50505050905090810190601f168015613d785780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015613d9557600080fd5b505af4158015613da9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015613dd257600080fd5b8101908080516040519392919084600160201b821115613df157600080fd5b908301906020820185811115613e0657600080fd5b8251600160201b811182820188101715613e1f57600080fd5b82525081516020918201929091019080838360005b83811015613e4c578181015183820152602001613e34565b50505050905090810190601f168015613e795780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b83811015613ee4578181015183820152602001613ecc565b50505050905090810190601f168015613f115780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015613f2e57600080fd5b505af4158015613f42573d6000803e3d6000fd5b505050506040513d6020811015613f5857600080fd5b50516002818155600385905560048490556000828152602081815260409091208851939450613f8d9392019190880190615599565b5060008181526020819052604080822063ffffffff871680825560019091018690559051909183917f6080b2cdc7fc4777ed1e1066af5de1df45ae9186adbdb7aec21fde27a3e17e4c9190a35050505050565b6000825160501460099061404d5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b5060008373__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e00413969091600460206040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156140c95781810151838201526020016140b1565b50505050905090810190601f1680156140f65780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561411557600080fd5b505af4158015614129573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561415257600080fd5b8101908080516040519392919084600160201b82111561417157600080fd5b90830190602082018581111561418657600080fd5b8251600160201b81118282018810171561419f57600080fd5b82525081516020918201929091019080838360005b838110156141cc5781810151838201526020016141b4565b50505050905090810190601f1680156141f95780820380516001836020036101000a031916815260200191505b506040819052630fcc9dc360e31b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__97637e64ee189750955090935083926044019185019080838360005b8381101561426457818101518382015260200161424c565b50505050905090810190601f1680156142915780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156142ae57600080fd5b505af41580156142c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156142eb57600080fd5b8101908080516040519392919084600160201b82111561430a57600080fd5b90830190602082018581111561431f57600080fd5b8251600160201b81118282018810171561433857600080fd5b82525081516020918201929091019080838360005b8381101561436557818101518382015260200161434d565b50505050905090810190601f1680156143925780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b838110156143fd5781810151838201526020016143e5565b50505050905090810190601f16801561442a5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561444757600080fd5b505af415801561445b573d6000803e3d6000fd5b505050506040513d602081101561447157600080fd5b50519050600061448085610d8e565b604051630fcc9dc360e31b815260206004820181815283516024840152835173__$28c06a71cd48aff62f401ad98e5ea52b1f$__94637e64ee1894909383926044909201919085019080838360005b838110156144e75781810151838201526020016144cf565b50505050905090810190601f1680156145145780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b15801561453157600080fd5b505af4158015614545573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561456e57600080fd5b8101908080516040519392919084600160201b82111561458d57600080fd5b9083019060208201858111156145a257600080fd5b8251600160201b8111828201881017156145bb57600080fd5b82525081516020918201929091019080838360005b838110156145e85781810151838201526020016145d0565b50505050905090810190601f1680156146155780820380516001836020036101000a031916815260200191505b5060408190526347f5343160e01b815260206004820181815286516024840152865173__$28c06a71cd48aff62f401ad98e5ea52b1f$__976347f534319750955090935083926044019185019080838360005b83811015614680578181015183820152602001614668565b50505050905090810190601f1680156146ad5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b1580156146ca57600080fd5b505af41580156146de573d6000803e3d6000fd5b505050506040513d60208110156146f457600080fd5b50516000818152602081905260409020600290810154919250600a91600019610100600183161502011604156147835760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b506000828152602081905260409020600290810154600b91600019610100600184161502019091160461480f5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b506000828152602081905260408120600101549061482c87613186565b600085815260208190526040902054909150600101600c828511156148aa5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b506148b6858284615243565b600d9061491c5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b5060006149288361316f565b9050838101886149e6576003548111600e9061499d5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b50600286905560038190556149b4868b8584615361565b604051839087907f6080b2cdc7fc4777ed1e1066af5de1df45ae9186adbdb7aec21fde27a3e17e4c90600090a3614cb9565b60008981526005602052604090206001015415614bf75786614a078a610eda565b14600f90614a6e5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b50600354811115614ba157600089815260056020526040812054905b60008b815260056020526040902060030154811015614b2257600082815260016020818152604080842054845290839052822082815590810182905590614ad46002830182615617565b50600060039182018190558c815260056020526040902001805482908110614af857fe5b60009182526020808320909101548483526001918290526040909220919091559182019101614a8a565b5060008a8152600560209081526040808320546000198501845260019092528083205490518d937fb151eb0731e1e8f4bbdac427313bb7039fb39ed6e55bee53a652508bf070c5ed91a460008a8152600560205260408120818155600181018290556002810182905590614b99600383018261565e565b505050614bf2565b600089815260056020526040902060020154614bc2908a90889085016153af565b8883877f97a8a4a3fa720a16b01757bf95f6482f4601e4cb3d3afe4facfb9f1fe6a8761360405160405180910390a45b614cb9565b6006548914614c0257fe5b600254871415601090614c6e5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b50614c7c89878488016153af565b600089815260056020526040808220859055518a91859189917f97a8a4a3fa720a16b01757bf95f6482f4601e4cb3d3afe4facfb9f1fe6a8761391a45b5050505050505092915050565b62ffffff811660189190911c6002190160080260020a0290565b6000815160201415614dce576040516347f5343160e01b815260206004820181815284516024840152845173__$28c06a71cd48aff62f401ad98e5ea52b1f$__936347f534319387939283926044019185019080838360005b83811015614d51578181015183820152602001614d39565b50505050905090810190601f168015614d7e5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015614d9b57600080fd5b505af4158015614daf573d6000803e3d6000fd5b505050506040513d6020811015614dc557600080fd5b50519050611959565b60408251118015614de457508151600019810116155b601390614e4a5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561193f5780601f106119145761010080835404028352916020019161193f565b508360015b6020845181614e5a57fe5b0481101561523a57600285066001141561504f576150488473__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e004139690918460200260206040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015614eec578181015183820152602001614ed4565b50505050905090810190601f168015614f195780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015614f3857600080fd5b505af4158015614f4c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015614f7557600080fd5b8101908080516040519392919084600160201b821115614f9457600080fd5b908301906020820185811115614fa957600080fd5b8251600160201b811182820188101715614fc257600080fd5b82525081516020918201929091019080838360005b83811015614fef578181015183820152602001614fd7565b50505050905090810190601f16801561501c5780820380516001836020036101000a031916815260200191505b506040525050508360405160200180828152602001915050604051602081830303815290604052613a1f565b915061522c565b61522982604051602001808281526020019150506040516020818303038152906040528573__$28c06a71cd48aff62f401ad98e5ea52b1f$__63e004139690918560200260206040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156150ed5781810151838201526020016150d5565b50505050905090810190601f16801561511a5780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b15801561513957600080fd5b505af415801561514d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561517657600080fd5b8101908080516040519392919084600160201b82111561519557600080fd5b9083019060208201858111156151aa57600080fd5b8251600160201b8111828201881017156151c357600080fd5b82525081516020918201929091019080838360005b838110156151f05781810151838201526020016151d8565b50505050905090810190601f16801561521d5780820380516001836020036101000a031916815260200191505b50604052505050613a1f565b91505b600285049450600101614e4f565b50949350505050565b6000838152602081815260408083206002908101805483516001821615610100026000190190911692909204601f8101859004850283018501909352828252606093919290918301828280156152da5780601f106152af576101008083540402835291602001916152da565b820191906000526020600020905b8154815290600101906020018083116152bd57829003601f168201915b5050505050905060006152ec82613186565b90506152f7856153e9565b61531f5780841415801561530a57508015155b1561531a57600092505050611959565b615355565b600061532a836111d5565b63ffffffff1690506000600454905060006153468383866153f2565b87149550611959945050505050565b50600195945050505050565b600084815260208181526040909120845161538492600290920191860190615599565b5060008481526020818152604080832085815560019081019490945593825291909152209190915550565b6000928352600560209081526040842060028101929092556001808301805482019055600390920180549283018155845290922090910155565b6107e090061590565b600082840362049d40811015615408575062049d405b6249d40081111561541957506249d4005b600061543e62127500615432848763ffffffff61546116565b9063ffffffff6154ba16565b90506001600160e01b03811115613a1657506001600160e01b0395945050505050565b600082615470575060006111ac565b8282028284828161547d57fe5b04146119595760405162461bcd60e51b81526004018080602001828103825260218152602001806156966021913960400191505060405180910390fd5b600061195983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836155835760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015615548578181015183820152602001615530565b50505050905090810190601f1680156155755780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161558f57fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106155da57805160ff1916838001178555615607565b82800160010185558215615607579182015b828111156156075782518255916020019190600101906155ec565b50615613929150615678565b5090565b50805460018160011615610100020316600290046000825580601f1061563d575061565b565b601f01602090049060005260206000209081019061565b9190615678565b50565b508054600082559060005260206000209081019061565b91905b61569291905b80821115615613576000815560010161567e565b9056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a72315820d6cef7b3790697e461d631452fcf13309c700ecac7c83d538d6c6ab6e60ecef964736f6c63430005100032506f57206861736820646f6573206e6f74206d65657420646966666963756c747920746172676574206f6620686561646572496e697469616c20706172656e742068617320616c7265616479206265656e20736574496e6469636174656420666f726b207375626d697373696f6e2c2062757420626c6f636b20697320696e206d61696e20636861696e50726576696f757320626c6f636b206861736820646f6573206e6f74206d61746368206c61737420626c6f636b20696e20666f726b207375626d697373696f6e496e636f727265637420646966666963756c7479207461726765742073706563696669656420696e20626c6f636b20686561646572496e636f727265637420666f726b206964656e7469666965723a2069642030206973206e6f20617661696c61626c654d61696e20636861696e207375626d697373696f6e20696e646963617465642c20627574207375626d697474656420626c6f636b206973206f6e206120666f726b5472616e73616374696f6e20686173206c65737320636f6e6669726d6174696f6e73207468616e20726571756573746564"

// DeployBTCRelay deploys a new Ethereum contract, binding an instance of BTCRelay to it.
func DeployBTCRelay(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *BTCRelay, error) {
	parsed, err := abi.JSON(strings.NewReader(BTCRelayABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	utilsAddr, _, _, _ := DeployUtils(auth, backend)
	BTCRelayBin = strings.Replace(BTCRelayBin, "__$28c06a71cd48aff62f401ad98e5ea52b1f$__", utilsAddr.String()[2:], -1)

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BTCRelayBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BTCRelay{BTCRelayCaller: BTCRelayCaller{contract: contract}, BTCRelayTransactor: BTCRelayTransactor{contract: contract}, BTCRelayFilterer: BTCRelayFilterer{contract: contract}}, nil
}

// BTCRelay is an auto generated Go binding around an Ethereum contract.
type BTCRelay struct {
	BTCRelayCaller     // Read-only binding to the contract
	BTCRelayTransactor // Write-only binding to the contract
	BTCRelayFilterer   // Log filterer for contract events
}

// BTCRelayCaller is an auto generated read-only Go binding around an Ethereum contract.
type BTCRelayCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BTCRelayTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BTCRelayTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BTCRelayFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BTCRelayFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BTCRelaySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BTCRelaySession struct {
	Contract     *BTCRelay         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BTCRelayCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BTCRelayCallerSession struct {
	Contract *BTCRelayCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// BTCRelayTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BTCRelayTransactorSession struct {
	Contract     *BTCRelayTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// BTCRelayRaw is an auto generated low-level Go binding around an Ethereum contract.
type BTCRelayRaw struct {
	Contract *BTCRelay // Generic contract binding to access the raw methods on
}

// BTCRelayCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BTCRelayCallerRaw struct {
	Contract *BTCRelayCaller // Generic read-only contract binding to access the raw methods on
}

// BTCRelayTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BTCRelayTransactorRaw struct {
	Contract *BTCRelayTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBTCRelay creates a new instance of BTCRelay, bound to a specific deployed contract.
func NewBTCRelay(address common.Address, backend bind.ContractBackend) (*BTCRelay, error) {
	contract, err := bindBTCRelay(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BTCRelay{BTCRelayCaller: BTCRelayCaller{contract: contract}, BTCRelayTransactor: BTCRelayTransactor{contract: contract}, BTCRelayFilterer: BTCRelayFilterer{contract: contract}}, nil
}

// NewBTCRelayCaller creates a new read-only instance of BTCRelay, bound to a specific deployed contract.
func NewBTCRelayCaller(address common.Address, caller bind.ContractCaller) (*BTCRelayCaller, error) {
	contract, err := bindBTCRelay(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BTCRelayCaller{contract: contract}, nil
}

// NewBTCRelayTransactor creates a new write-only instance of BTCRelay, bound to a specific deployed contract.
func NewBTCRelayTransactor(address common.Address, transactor bind.ContractTransactor) (*BTCRelayTransactor, error) {
	contract, err := bindBTCRelay(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BTCRelayTransactor{contract: contract}, nil
}

// NewBTCRelayFilterer creates a new log filterer instance of BTCRelay, bound to a specific deployed contract.
func NewBTCRelayFilterer(address common.Address, filterer bind.ContractFilterer) (*BTCRelayFilterer, error) {
	contract, err := bindBTCRelay(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BTCRelayFilterer{contract: contract}, nil
}

// bindBTCRelay binds a generic wrapper to an already deployed contract.
func bindBTCRelay(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BTCRelayABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BTCRelay *BTCRelayRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BTCRelay.Contract.BTCRelayCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BTCRelay *BTCRelayRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BTCRelay.Contract.BTCRelayTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BTCRelay *BTCRelayRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BTCRelay.Contract.BTCRelayTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BTCRelay *BTCRelayCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BTCRelay.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BTCRelay *BTCRelayTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BTCRelay.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BTCRelay *BTCRelayTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BTCRelay.Contract.contract.Transact(opts, method, params...)
}

// DIFFICULTYADJUSTMENTINVETVAL is a free data retrieval call binding the contract method 0x41e00640.
//
// Solidity: function DIFFICULTY_ADJUSTMENT_INVETVAL() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) DIFFICULTYADJUSTMENTINVETVAL(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "DIFFICULTY_ADJUSTMENT_INVETVAL")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DIFFICULTYADJUSTMENTINVETVAL is a free data retrieval call binding the contract method 0x41e00640.
//
// Solidity: function DIFFICULTY_ADJUSTMENT_INVETVAL() view returns(uint256)
func (_BTCRelay *BTCRelaySession) DIFFICULTYADJUSTMENTINVETVAL() (*big.Int, error) {
	return _BTCRelay.Contract.DIFFICULTYADJUSTMENTINVETVAL(&_BTCRelay.CallOpts)
}

// DIFFICULTYADJUSTMENTINVETVAL is a free data retrieval call binding the contract method 0x41e00640.
//
// Solidity: function DIFFICULTY_ADJUSTMENT_INVETVAL() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) DIFFICULTYADJUSTMENTINVETVAL() (*big.Int, error) {
	return _BTCRelay.Contract.DIFFICULTYADJUSTMENTINVETVAL(&_BTCRelay.CallOpts)
}

// TARGETTIMESPAN is a free data retrieval call binding the contract method 0xdd86037e.
//
// Solidity: function TARGET_TIMESPAN() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) TARGETTIMESPAN(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "TARGET_TIMESPAN")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TARGETTIMESPAN is a free data retrieval call binding the contract method 0xdd86037e.
//
// Solidity: function TARGET_TIMESPAN() view returns(uint256)
func (_BTCRelay *BTCRelaySession) TARGETTIMESPAN() (*big.Int, error) {
	return _BTCRelay.Contract.TARGETTIMESPAN(&_BTCRelay.CallOpts)
}

// TARGETTIMESPAN is a free data retrieval call binding the contract method 0xdd86037e.
//
// Solidity: function TARGET_TIMESPAN() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) TARGETTIMESPAN() (*big.Int, error) {
	return _BTCRelay.Contract.TARGETTIMESPAN(&_BTCRelay.CallOpts)
}

// TARGETTIMESPANDIV4 is a free data retrieval call binding the contract method 0xd5fe5558.
//
// Solidity: function TARGET_TIMESPAN_DIV_4() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) TARGETTIMESPANDIV4(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "TARGET_TIMESPAN_DIV_4")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TARGETTIMESPANDIV4 is a free data retrieval call binding the contract method 0xd5fe5558.
//
// Solidity: function TARGET_TIMESPAN_DIV_4() view returns(uint256)
func (_BTCRelay *BTCRelaySession) TARGETTIMESPANDIV4() (*big.Int, error) {
	return _BTCRelay.Contract.TARGETTIMESPANDIV4(&_BTCRelay.CallOpts)
}

// TARGETTIMESPANDIV4 is a free data retrieval call binding the contract method 0xd5fe5558.
//
// Solidity: function TARGET_TIMESPAN_DIV_4() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) TARGETTIMESPANDIV4() (*big.Int, error) {
	return _BTCRelay.Contract.TARGETTIMESPANDIV4(&_BTCRelay.CallOpts)
}

// TARGETTIMESPANMUL4 is a free data retrieval call binding the contract method 0x352b3355.
//
// Solidity: function TARGET_TIMESPAN_MUL_4() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) TARGETTIMESPANMUL4(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "TARGET_TIMESPAN_MUL_4")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TARGETTIMESPANMUL4 is a free data retrieval call binding the contract method 0x352b3355.
//
// Solidity: function TARGET_TIMESPAN_MUL_4() view returns(uint256)
func (_BTCRelay *BTCRelaySession) TARGETTIMESPANMUL4() (*big.Int, error) {
	return _BTCRelay.Contract.TARGETTIMESPANMUL4(&_BTCRelay.CallOpts)
}

// TARGETTIMESPANMUL4 is a free data retrieval call binding the contract method 0x352b3355.
//
// Solidity: function TARGET_TIMESPAN_MUL_4() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) TARGETTIMESPANMUL4() (*big.Int, error) {
	return _BTCRelay.Contract.TARGETTIMESPANMUL4(&_BTCRelay.CallOpts)
}

// UNROUNDEDMAXTARGET is a free data retrieval call binding the contract method 0x285d84cc.
//
// Solidity: function UNROUNDED_MAX_TARGET() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) UNROUNDEDMAXTARGET(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "UNROUNDED_MAX_TARGET")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UNROUNDEDMAXTARGET is a free data retrieval call binding the contract method 0x285d84cc.
//
// Solidity: function UNROUNDED_MAX_TARGET() view returns(uint256)
func (_BTCRelay *BTCRelaySession) UNROUNDEDMAXTARGET() (*big.Int, error) {
	return _BTCRelay.Contract.UNROUNDEDMAXTARGET(&_BTCRelay.CallOpts)
}

// UNROUNDEDMAXTARGET is a free data retrieval call binding the contract method 0x285d84cc.
//
// Solidity: function UNROUNDED_MAX_TARGET() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) UNROUNDEDMAXTARGET() (*big.Int, error) {
	return _BTCRelay.Contract.UNROUNDEDMAXTARGET(&_BTCRelay.CallOpts)
}

// ForkCounter is a free data retrieval call binding the contract method 0x5b054e2d.
//
// Solidity: function _forkCounter() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) ForkCounter(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_forkCounter")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ForkCounter is a free data retrieval call binding the contract method 0x5b054e2d.
//
// Solidity: function _forkCounter() view returns(uint256)
func (_BTCRelay *BTCRelaySession) ForkCounter() (*big.Int, error) {
	return _BTCRelay.Contract.ForkCounter(&_BTCRelay.CallOpts)
}

// ForkCounter is a free data retrieval call binding the contract method 0x5b054e2d.
//
// Solidity: function _forkCounter() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) ForkCounter() (*big.Int, error) {
	return _BTCRelay.Contract.ForkCounter(&_BTCRelay.CallOpts)
}

// Headers is a free data retrieval call binding the contract method 0x9f0ae3c4.
//
// Solidity: function _headers(bytes32 ) view returns(uint256 blockHeight, uint256 chainWork, bytes header, uint256 lastDiffAdjustment)
func (_BTCRelay *BTCRelayCaller) Headers(opts *bind.CallOpts, arg0 [32]byte) (struct {
	BlockHeight        *big.Int
	ChainWork          *big.Int
	Header             []byte
	LastDiffAdjustment *big.Int
}, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_headers", arg0)

	outstruct := new(struct {
		BlockHeight        *big.Int
		ChainWork          *big.Int
		Header             []byte
		LastDiffAdjustment *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.BlockHeight = out[0].(*big.Int)
	outstruct.ChainWork = out[1].(*big.Int)
	outstruct.Header = out[2].([]byte)
	outstruct.LastDiffAdjustment = out[3].(*big.Int)

	return *outstruct, err

}

// Headers is a free data retrieval call binding the contract method 0x9f0ae3c4.
//
// Solidity: function _headers(bytes32 ) view returns(uint256 blockHeight, uint256 chainWork, bytes header, uint256 lastDiffAdjustment)
func (_BTCRelay *BTCRelaySession) Headers(arg0 [32]byte) (struct {
	BlockHeight        *big.Int
	ChainWork          *big.Int
	Header             []byte
	LastDiffAdjustment *big.Int
}, error) {
	return _BTCRelay.Contract.Headers(&_BTCRelay.CallOpts, arg0)
}

// Headers is a free data retrieval call binding the contract method 0x9f0ae3c4.
//
// Solidity: function _headers(bytes32 ) view returns(uint256 blockHeight, uint256 chainWork, bytes header, uint256 lastDiffAdjustment)
func (_BTCRelay *BTCRelayCallerSession) Headers(arg0 [32]byte) (struct {
	BlockHeight        *big.Int
	ChainWork          *big.Int
	Header             []byte
	LastDiffAdjustment *big.Int
}, error) {
	return _BTCRelay.Contract.Headers(&_BTCRelay.CallOpts, arg0)
}

// HeaviestBlock is a free data retrieval call binding the contract method 0x24780f0f.
//
// Solidity: function _heaviestBlock() view returns(bytes32)
func (_BTCRelay *BTCRelayCaller) HeaviestBlock(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_heaviestBlock")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// HeaviestBlock is a free data retrieval call binding the contract method 0x24780f0f.
//
// Solidity: function _heaviestBlock() view returns(bytes32)
func (_BTCRelay *BTCRelaySession) HeaviestBlock() ([32]byte, error) {
	return _BTCRelay.Contract.HeaviestBlock(&_BTCRelay.CallOpts)
}

// HeaviestBlock is a free data retrieval call binding the contract method 0x24780f0f.
//
// Solidity: function _heaviestBlock() view returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) HeaviestBlock() ([32]byte, error) {
	return _BTCRelay.Contract.HeaviestBlock(&_BTCRelay.CallOpts)
}

// HighScore is a free data retrieval call binding the contract method 0x862661ce.
//
// Solidity: function _highScore() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) HighScore(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_highScore")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// HighScore is a free data retrieval call binding the contract method 0x862661ce.
//
// Solidity: function _highScore() view returns(uint256)
func (_BTCRelay *BTCRelaySession) HighScore() (*big.Int, error) {
	return _BTCRelay.Contract.HighScore(&_BTCRelay.CallOpts)
}

// HighScore is a free data retrieval call binding the contract method 0x862661ce.
//
// Solidity: function _highScore() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) HighScore() (*big.Int, error) {
	return _BTCRelay.Contract.HighScore(&_BTCRelay.CallOpts)
}

// LastDiffAdjustmentTime is a free data retrieval call binding the contract method 0xb778c84a.
//
// Solidity: function _lastDiffAdjustmentTime() view returns(uint256)
func (_BTCRelay *BTCRelayCaller) LastDiffAdjustmentTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_lastDiffAdjustmentTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastDiffAdjustmentTime is a free data retrieval call binding the contract method 0xb778c84a.
//
// Solidity: function _lastDiffAdjustmentTime() view returns(uint256)
func (_BTCRelay *BTCRelaySession) LastDiffAdjustmentTime() (*big.Int, error) {
	return _BTCRelay.Contract.LastDiffAdjustmentTime(&_BTCRelay.CallOpts)
}

// LastDiffAdjustmentTime is a free data retrieval call binding the contract method 0xb778c84a.
//
// Solidity: function _lastDiffAdjustmentTime() view returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) LastDiffAdjustmentTime() (*big.Int, error) {
	return _BTCRelay.Contract.LastDiffAdjustmentTime(&_BTCRelay.CallOpts)
}

// MainChain is a free data retrieval call binding the contract method 0x1c5c14e0.
//
// Solidity: function _mainChain(uint256 ) view returns(bytes32)
func (_BTCRelay *BTCRelayCaller) MainChain(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_mainChain", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// MainChain is a free data retrieval call binding the contract method 0x1c5c14e0.
//
// Solidity: function _mainChain(uint256 ) view returns(bytes32)
func (_BTCRelay *BTCRelaySession) MainChain(arg0 *big.Int) ([32]byte, error) {
	return _BTCRelay.Contract.MainChain(&_BTCRelay.CallOpts, arg0)
}

// MainChain is a free data retrieval call binding the contract method 0x1c5c14e0.
//
// Solidity: function _mainChain(uint256 ) view returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) MainChain(arg0 *big.Int) ([32]byte, error) {
	return _BTCRelay.Contract.MainChain(&_BTCRelay.CallOpts, arg0)
}

// OngoingForks is a free data retrieval call binding the contract method 0x3f18da79.
//
// Solidity: function _ongoingForks(uint256 ) view returns(uint256 startHeight, uint256 length, uint256 chainWork)
func (_BTCRelay *BTCRelayCaller) OngoingForks(opts *bind.CallOpts, arg0 *big.Int) (struct {
	StartHeight *big.Int
	Length      *big.Int
	ChainWork   *big.Int
}, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "_ongoingForks", arg0)

	outstruct := new(struct {
		StartHeight *big.Int
		Length      *big.Int
		ChainWork   *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartHeight = out[0].(*big.Int)
	outstruct.Length = out[1].(*big.Int)
	outstruct.ChainWork = out[2].(*big.Int)

	return *outstruct, err

}

// OngoingForks is a free data retrieval call binding the contract method 0x3f18da79.
//
// Solidity: function _ongoingForks(uint256 ) view returns(uint256 startHeight, uint256 length, uint256 chainWork)
func (_BTCRelay *BTCRelaySession) OngoingForks(arg0 *big.Int) (struct {
	StartHeight *big.Int
	Length      *big.Int
	ChainWork   *big.Int
}, error) {
	return _BTCRelay.Contract.OngoingForks(&_BTCRelay.CallOpts, arg0)
}

// OngoingForks is a free data retrieval call binding the contract method 0x3f18da79.
//
// Solidity: function _ongoingForks(uint256 ) view returns(uint256 startHeight, uint256 length, uint256 chainWork)
func (_BTCRelay *BTCRelayCallerSession) OngoingForks(arg0 *big.Int) (struct {
	StartHeight *big.Int
	Length      *big.Int
	ChainWork   *big.Int
}, error) {
	return _BTCRelay.Contract.OngoingForks(&_BTCRelay.CallOpts, arg0)
}

// ConcatSHA256Hash is a free data retrieval call binding the contract method 0xb417d5e2.
//
// Solidity: function concatSHA256Hash(bytes left, bytes right) pure returns(bytes32)
func (_BTCRelay *BTCRelayCaller) ConcatSHA256Hash(opts *bind.CallOpts, left []byte, right []byte) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "concatSHA256Hash", left, right)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ConcatSHA256Hash is a free data retrieval call binding the contract method 0xb417d5e2.
//
// Solidity: function concatSHA256Hash(bytes left, bytes right) pure returns(bytes32)
func (_BTCRelay *BTCRelaySession) ConcatSHA256Hash(left []byte, right []byte) ([32]byte, error) {
	return _BTCRelay.Contract.ConcatSHA256Hash(&_BTCRelay.CallOpts, left, right)
}

// ConcatSHA256Hash is a free data retrieval call binding the contract method 0xb417d5e2.
//
// Solidity: function concatSHA256Hash(bytes left, bytes right) pure returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) ConcatSHA256Hash(left []byte, right []byte) ([32]byte, error) {
	return _BTCRelay.Contract.ConcatSHA256Hash(&_BTCRelay.CallOpts, left, right)
}

// DblSha is a free data retrieval call binding the contract method 0x0491cb1e.
//
// Solidity: function dblSha(bytes data) pure returns(bytes)
func (_BTCRelay *BTCRelayCaller) DblSha(opts *bind.CallOpts, data []byte) ([]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "dblSha", data)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// DblSha is a free data retrieval call binding the contract method 0x0491cb1e.
//
// Solidity: function dblSha(bytes data) pure returns(bytes)
func (_BTCRelay *BTCRelaySession) DblSha(data []byte) ([]byte, error) {
	return _BTCRelay.Contract.DblSha(&_BTCRelay.CallOpts, data)
}

// DblSha is a free data retrieval call binding the contract method 0x0491cb1e.
//
// Solidity: function dblSha(bytes data) pure returns(bytes)
func (_BTCRelay *BTCRelayCallerSession) DblSha(data []byte) ([]byte, error) {
	return _BTCRelay.Contract.DblSha(&_BTCRelay.CallOpts, data)
}

// GetBlockHeader is a free data retrieval call binding the contract method 0x6b4f9b9d.
//
// Solidity: function getBlockHeader(bytes32 blockHeaderHash) view returns(uint32 version, uint32 time, uint32 nonce, bytes32 prevBlockHash, bytes32 merkleRoot, uint256 target)
func (_BTCRelay *BTCRelayCaller) GetBlockHeader(opts *bind.CallOpts, blockHeaderHash [32]byte) (struct {
	Version       uint32
	Time          uint32
	Nonce         uint32
	PrevBlockHash [32]byte
	MerkleRoot    [32]byte
	Target        *big.Int
}, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getBlockHeader", blockHeaderHash)

	outstruct := new(struct {
		Version       uint32
		Time          uint32
		Nonce         uint32
		PrevBlockHash [32]byte
		MerkleRoot    [32]byte
		Target        *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Version = out[0].(uint32)
	outstruct.Time = out[1].(uint32)
	outstruct.Nonce = out[2].(uint32)
	outstruct.PrevBlockHash = out[3].([32]byte)
	outstruct.MerkleRoot = out[4].([32]byte)
	outstruct.Target = out[5].(*big.Int)

	return *outstruct, err

}

// GetBlockHeader is a free data retrieval call binding the contract method 0x6b4f9b9d.
//
// Solidity: function getBlockHeader(bytes32 blockHeaderHash) view returns(uint32 version, uint32 time, uint32 nonce, bytes32 prevBlockHash, bytes32 merkleRoot, uint256 target)
func (_BTCRelay *BTCRelaySession) GetBlockHeader(blockHeaderHash [32]byte) (struct {
	Version       uint32
	Time          uint32
	Nonce         uint32
	PrevBlockHash [32]byte
	MerkleRoot    [32]byte
	Target        *big.Int
}, error) {
	return _BTCRelay.Contract.GetBlockHeader(&_BTCRelay.CallOpts, blockHeaderHash)
}

// GetBlockHeader is a free data retrieval call binding the contract method 0x6b4f9b9d.
//
// Solidity: function getBlockHeader(bytes32 blockHeaderHash) view returns(uint32 version, uint32 time, uint32 nonce, bytes32 prevBlockHash, bytes32 merkleRoot, uint256 target)
func (_BTCRelay *BTCRelayCallerSession) GetBlockHeader(blockHeaderHash [32]byte) (struct {
	Version       uint32
	Time          uint32
	Nonce         uint32
	PrevBlockHash [32]byte
	MerkleRoot    [32]byte
	Target        *big.Int
}, error) {
	return _BTCRelay.Contract.GetBlockHeader(&_BTCRelay.CallOpts, blockHeaderHash)
}

// GetDifficulty is a free data retrieval call binding the contract method 0x983ef725.
//
// Solidity: function getDifficulty(uint256 target) pure returns(uint256)
func (_BTCRelay *BTCRelayCaller) GetDifficulty(opts *bind.CallOpts, target *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getDifficulty", target)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetDifficulty is a free data retrieval call binding the contract method 0x983ef725.
//
// Solidity: function getDifficulty(uint256 target) pure returns(uint256)
func (_BTCRelay *BTCRelaySession) GetDifficulty(target *big.Int) (*big.Int, error) {
	return _BTCRelay.Contract.GetDifficulty(&_BTCRelay.CallOpts, target)
}

// GetDifficulty is a free data retrieval call binding the contract method 0x983ef725.
//
// Solidity: function getDifficulty(uint256 target) pure returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) GetDifficulty(target *big.Int) (*big.Int, error) {
	return _BTCRelay.Contract.GetDifficulty(&_BTCRelay.CallOpts, target)
}

// GetLatestForkHash is a free data retrieval call binding the contract method 0x0dcf082d.
//
// Solidity: function getLatestForkHash(uint256 forkId) view returns(bytes32)
func (_BTCRelay *BTCRelayCaller) GetLatestForkHash(opts *bind.CallOpts, forkId *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getLatestForkHash", forkId)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetLatestForkHash is a free data retrieval call binding the contract method 0x0dcf082d.
//
// Solidity: function getLatestForkHash(uint256 forkId) view returns(bytes32)
func (_BTCRelay *BTCRelaySession) GetLatestForkHash(forkId *big.Int) ([32]byte, error) {
	return _BTCRelay.Contract.GetLatestForkHash(&_BTCRelay.CallOpts, forkId)
}

// GetLatestForkHash is a free data retrieval call binding the contract method 0x0dcf082d.
//
// Solidity: function getLatestForkHash(uint256 forkId) view returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) GetLatestForkHash(forkId *big.Int) ([32]byte, error) {
	return _BTCRelay.Contract.GetLatestForkHash(&_BTCRelay.CallOpts, forkId)
}

// GetMerkleRoot is a free data retrieval call binding the contract method 0xd9c67404.
//
// Solidity: function getMerkleRoot(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelayCaller) GetMerkleRoot(opts *bind.CallOpts, blockHeaderBytes []byte) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getMerkleRoot", blockHeaderBytes)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetMerkleRoot is a free data retrieval call binding the contract method 0xd9c67404.
//
// Solidity: function getMerkleRoot(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelaySession) GetMerkleRoot(blockHeaderBytes []byte) ([32]byte, error) {
	return _BTCRelay.Contract.GetMerkleRoot(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetMerkleRoot is a free data retrieval call binding the contract method 0xd9c67404.
//
// Solidity: function getMerkleRoot(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) GetMerkleRoot(blockHeaderBytes []byte) ([32]byte, error) {
	return _BTCRelay.Contract.GetMerkleRoot(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetMerkleRootFromHeader is a free data retrieval call binding the contract method 0x1196bd62.
//
// Solidity: function getMerkleRootFromHeader(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelayCaller) GetMerkleRootFromHeader(opts *bind.CallOpts, blockHeaderBytes []byte) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getMerkleRootFromHeader", blockHeaderBytes)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetMerkleRootFromHeader is a free data retrieval call binding the contract method 0x1196bd62.
//
// Solidity: function getMerkleRootFromHeader(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelaySession) GetMerkleRootFromHeader(blockHeaderBytes []byte) ([32]byte, error) {
	return _BTCRelay.Contract.GetMerkleRootFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetMerkleRootFromHeader is a free data retrieval call binding the contract method 0x1196bd62.
//
// Solidity: function getMerkleRootFromHeader(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) GetMerkleRootFromHeader(blockHeaderBytes []byte) ([32]byte, error) {
	return _BTCRelay.Contract.GetMerkleRootFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetNBitsFromHeader is a free data retrieval call binding the contract method 0x56ac9f67.
//
// Solidity: function getNBitsFromHeader(bytes blockHeaderBytes) pure returns(uint256)
func (_BTCRelay *BTCRelayCaller) GetNBitsFromHeader(opts *bind.CallOpts, blockHeaderBytes []byte) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getNBitsFromHeader", blockHeaderBytes)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNBitsFromHeader is a free data retrieval call binding the contract method 0x56ac9f67.
//
// Solidity: function getNBitsFromHeader(bytes blockHeaderBytes) pure returns(uint256)
func (_BTCRelay *BTCRelaySession) GetNBitsFromHeader(blockHeaderBytes []byte) (*big.Int, error) {
	return _BTCRelay.Contract.GetNBitsFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetNBitsFromHeader is a free data retrieval call binding the contract method 0x56ac9f67.
//
// Solidity: function getNBitsFromHeader(bytes blockHeaderBytes) pure returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) GetNBitsFromHeader(blockHeaderBytes []byte) (*big.Int, error) {
	return _BTCRelay.Contract.GetNBitsFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetPrevBlockHashFromHeader is a free data retrieval call binding the contract method 0x5dc4011d.
//
// Solidity: function getPrevBlockHashFromHeader(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelayCaller) GetPrevBlockHashFromHeader(opts *bind.CallOpts, blockHeaderBytes []byte) ([32]byte, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getPrevBlockHashFromHeader", blockHeaderBytes)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetPrevBlockHashFromHeader is a free data retrieval call binding the contract method 0x5dc4011d.
//
// Solidity: function getPrevBlockHashFromHeader(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelaySession) GetPrevBlockHashFromHeader(blockHeaderBytes []byte) ([32]byte, error) {
	return _BTCRelay.Contract.GetPrevBlockHashFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetPrevBlockHashFromHeader is a free data retrieval call binding the contract method 0x5dc4011d.
//
// Solidity: function getPrevBlockHashFromHeader(bytes blockHeaderBytes) pure returns(bytes32)
func (_BTCRelay *BTCRelayCallerSession) GetPrevBlockHashFromHeader(blockHeaderBytes []byte) ([32]byte, error) {
	return _BTCRelay.Contract.GetPrevBlockHashFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetTargetFromHeader is a free data retrieval call binding the contract method 0x9aeb6306.
//
// Solidity: function getTargetFromHeader(bytes blockHeaderBytes) pure returns(uint256)
func (_BTCRelay *BTCRelayCaller) GetTargetFromHeader(opts *bind.CallOpts, blockHeaderBytes []byte) (*big.Int, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getTargetFromHeader", blockHeaderBytes)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTargetFromHeader is a free data retrieval call binding the contract method 0x9aeb6306.
//
// Solidity: function getTargetFromHeader(bytes blockHeaderBytes) pure returns(uint256)
func (_BTCRelay *BTCRelaySession) GetTargetFromHeader(blockHeaderBytes []byte) (*big.Int, error) {
	return _BTCRelay.Contract.GetTargetFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetTargetFromHeader is a free data retrieval call binding the contract method 0x9aeb6306.
//
// Solidity: function getTargetFromHeader(bytes blockHeaderBytes) pure returns(uint256)
func (_BTCRelay *BTCRelayCallerSession) GetTargetFromHeader(blockHeaderBytes []byte) (*big.Int, error) {
	return _BTCRelay.Contract.GetTargetFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetTimeFromHeader is a free data retrieval call binding the contract method 0x336c9142.
//
// Solidity: function getTimeFromHeader(bytes blockHeaderBytes) pure returns(uint32)
func (_BTCRelay *BTCRelayCaller) GetTimeFromHeader(opts *bind.CallOpts, blockHeaderBytes []byte) (uint32, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "getTimeFromHeader", blockHeaderBytes)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetTimeFromHeader is a free data retrieval call binding the contract method 0x336c9142.
//
// Solidity: function getTimeFromHeader(bytes blockHeaderBytes) pure returns(uint32)
func (_BTCRelay *BTCRelaySession) GetTimeFromHeader(blockHeaderBytes []byte) (uint32, error) {
	return _BTCRelay.Contract.GetTimeFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// GetTimeFromHeader is a free data retrieval call binding the contract method 0x336c9142.
//
// Solidity: function getTimeFromHeader(bytes blockHeaderBytes) pure returns(uint32)
func (_BTCRelay *BTCRelayCallerSession) GetTimeFromHeader(blockHeaderBytes []byte) (uint32, error) {
	return _BTCRelay.Contract.GetTimeFromHeader(&_BTCRelay.CallOpts, blockHeaderBytes)
}

// WithinXConfirms is a free data retrieval call binding the contract method 0xbcf53528.
//
// Solidity: function withinXConfirms(bytes32 blockHeaderHash, uint256 confirmations) view returns(bool)
func (_BTCRelay *BTCRelayCaller) WithinXConfirms(opts *bind.CallOpts, blockHeaderHash [32]byte, confirmations *big.Int) (bool, error) {
	var out []interface{}
	err := _BTCRelay.contract.Call(opts, &out, "withinXConfirms", blockHeaderHash, confirmations)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// WithinXConfirms is a free data retrieval call binding the contract method 0xbcf53528.
//
// Solidity: function withinXConfirms(bytes32 blockHeaderHash, uint256 confirmations) view returns(bool)
func (_BTCRelay *BTCRelaySession) WithinXConfirms(blockHeaderHash [32]byte, confirmations *big.Int) (bool, error) {
	return _BTCRelay.Contract.WithinXConfirms(&_BTCRelay.CallOpts, blockHeaderHash, confirmations)
}

// WithinXConfirms is a free data retrieval call binding the contract method 0xbcf53528.
//
// Solidity: function withinXConfirms(bytes32 blockHeaderHash, uint256 confirmations) view returns(bool)
func (_BTCRelay *BTCRelayCallerSession) WithinXConfirms(blockHeaderHash [32]byte, confirmations *big.Int) (bool, error) {
	return _BTCRelay.Contract.WithinXConfirms(&_BTCRelay.CallOpts, blockHeaderHash, confirmations)
}

// SetInitialParent is a paid mutator transaction binding the contract method 0xf59b328c.
//
// Solidity: function setInitialParent(bytes blockHeaderBytes, uint32 blockHeight, uint256 chainWork, uint256 lastDiffAdjustmentTime) returns()
func (_BTCRelay *BTCRelayTransactor) SetInitialParent(opts *bind.TransactOpts, blockHeaderBytes []byte, blockHeight uint32, chainWork *big.Int, lastDiffAdjustmentTime *big.Int) (*types.Transaction, error) {
	return _BTCRelay.contract.Transact(opts, "setInitialParent", blockHeaderBytes, blockHeight, chainWork, lastDiffAdjustmentTime)
}

// SetInitialParent is a paid mutator transaction binding the contract method 0xf59b328c.
//
// Solidity: function setInitialParent(bytes blockHeaderBytes, uint32 blockHeight, uint256 chainWork, uint256 lastDiffAdjustmentTime) returns()
func (_BTCRelay *BTCRelaySession) SetInitialParent(blockHeaderBytes []byte, blockHeight uint32, chainWork *big.Int, lastDiffAdjustmentTime *big.Int) (*types.Transaction, error) {
	return _BTCRelay.Contract.SetInitialParent(&_BTCRelay.TransactOpts, blockHeaderBytes, blockHeight, chainWork, lastDiffAdjustmentTime)
}

// SetInitialParent is a paid mutator transaction binding the contract method 0xf59b328c.
//
// Solidity: function setInitialParent(bytes blockHeaderBytes, uint32 blockHeight, uint256 chainWork, uint256 lastDiffAdjustmentTime) returns()
func (_BTCRelay *BTCRelayTransactorSession) SetInitialParent(blockHeaderBytes []byte, blockHeight uint32, chainWork *big.Int, lastDiffAdjustmentTime *big.Int) (*types.Transaction, error) {
	return _BTCRelay.Contract.SetInitialParent(&_BTCRelay.TransactOpts, blockHeaderBytes, blockHeight, chainWork, lastDiffAdjustmentTime)
}

// SubmitForkChainHeader is a paid mutator transaction binding the contract method 0x68f5b5be.
//
// Solidity: function submitForkChainHeader(bytes blockHeaderBytes, uint256 forkId) returns(bytes32)
func (_BTCRelay *BTCRelayTransactor) SubmitForkChainHeader(opts *bind.TransactOpts, blockHeaderBytes []byte, forkId *big.Int) (*types.Transaction, error) {
	return _BTCRelay.contract.Transact(opts, "submitForkChainHeader", blockHeaderBytes, forkId)
}

// SubmitForkChainHeader is a paid mutator transaction binding the contract method 0x68f5b5be.
//
// Solidity: function submitForkChainHeader(bytes blockHeaderBytes, uint256 forkId) returns(bytes32)
func (_BTCRelay *BTCRelaySession) SubmitForkChainHeader(blockHeaderBytes []byte, forkId *big.Int) (*types.Transaction, error) {
	return _BTCRelay.Contract.SubmitForkChainHeader(&_BTCRelay.TransactOpts, blockHeaderBytes, forkId)
}

// SubmitForkChainHeader is a paid mutator transaction binding the contract method 0x68f5b5be.
//
// Solidity: function submitForkChainHeader(bytes blockHeaderBytes, uint256 forkId) returns(bytes32)
func (_BTCRelay *BTCRelayTransactorSession) SubmitForkChainHeader(blockHeaderBytes []byte, forkId *big.Int) (*types.Transaction, error) {
	return _BTCRelay.Contract.SubmitForkChainHeader(&_BTCRelay.TransactOpts, blockHeaderBytes, forkId)
}

// SubmitMainChainHeader is a paid mutator transaction binding the contract method 0x157800e5.
//
// Solidity: function submitMainChainHeader(bytes blockHeaderBytes) returns(bytes32)
func (_BTCRelay *BTCRelayTransactor) SubmitMainChainHeader(opts *bind.TransactOpts, blockHeaderBytes []byte) (*types.Transaction, error) {
	return _BTCRelay.contract.Transact(opts, "submitMainChainHeader", blockHeaderBytes)
}

// SubmitMainChainHeader is a paid mutator transaction binding the contract method 0x157800e5.
//
// Solidity: function submitMainChainHeader(bytes blockHeaderBytes) returns(bytes32)
func (_BTCRelay *BTCRelaySession) SubmitMainChainHeader(blockHeaderBytes []byte) (*types.Transaction, error) {
	return _BTCRelay.Contract.SubmitMainChainHeader(&_BTCRelay.TransactOpts, blockHeaderBytes)
}

// SubmitMainChainHeader is a paid mutator transaction binding the contract method 0x157800e5.
//
// Solidity: function submitMainChainHeader(bytes blockHeaderBytes) returns(bytes32)
func (_BTCRelay *BTCRelayTransactorSession) SubmitMainChainHeader(blockHeaderBytes []byte) (*types.Transaction, error) {
	return _BTCRelay.Contract.SubmitMainChainHeader(&_BTCRelay.TransactOpts, blockHeaderBytes)
}

// SubmitNewForkChainHeader is a paid mutator transaction binding the contract method 0x5afb4f4b.
//
// Solidity: function submitNewForkChainHeader(bytes blockHeaderBytes) returns(bytes32 blockHeaderHash)
func (_BTCRelay *BTCRelayTransactor) SubmitNewForkChainHeader(opts *bind.TransactOpts, blockHeaderBytes []byte) (*types.Transaction, error) {
	return _BTCRelay.contract.Transact(opts, "submitNewForkChainHeader", blockHeaderBytes)
}

// SubmitNewForkChainHeader is a paid mutator transaction binding the contract method 0x5afb4f4b.
//
// Solidity: function submitNewForkChainHeader(bytes blockHeaderBytes) returns(bytes32 blockHeaderHash)
func (_BTCRelay *BTCRelaySession) SubmitNewForkChainHeader(blockHeaderBytes []byte) (*types.Transaction, error) {
	return _BTCRelay.Contract.SubmitNewForkChainHeader(&_BTCRelay.TransactOpts, blockHeaderBytes)
}

// SubmitNewForkChainHeader is a paid mutator transaction binding the contract method 0x5afb4f4b.
//
// Solidity: function submitNewForkChainHeader(bytes blockHeaderBytes) returns(bytes32 blockHeaderHash)
func (_BTCRelay *BTCRelayTransactorSession) SubmitNewForkChainHeader(blockHeaderBytes []byte) (*types.Transaction, error) {
	return _BTCRelay.Contract.SubmitNewForkChainHeader(&_BTCRelay.TransactOpts, blockHeaderBytes)
}

// VerifxTX is a paid mutator transaction binding the contract method 0xa6feda9b.
//
// Solidity: function verifxTX(bytes32 txid, uint256 txBlockHeight, uint256 txIndex, bytes merkleProof, uint256 confirmations) returns(bool)
func (_BTCRelay *BTCRelayTransactor) VerifxTX(opts *bind.TransactOpts, txid [32]byte, txBlockHeight *big.Int, txIndex *big.Int, merkleProof []byte, confirmations *big.Int) (*types.Transaction, error) {
	return _BTCRelay.contract.Transact(opts, "verifxTX", txid, txBlockHeight, txIndex, merkleProof, confirmations)
}

// VerifxTX is a paid mutator transaction binding the contract method 0xa6feda9b.
//
// Solidity: function verifxTX(bytes32 txid, uint256 txBlockHeight, uint256 txIndex, bytes merkleProof, uint256 confirmations) returns(bool)
func (_BTCRelay *BTCRelaySession) VerifxTX(txid [32]byte, txBlockHeight *big.Int, txIndex *big.Int, merkleProof []byte, confirmations *big.Int) (*types.Transaction, error) {
	return _BTCRelay.Contract.VerifxTX(&_BTCRelay.TransactOpts, txid, txBlockHeight, txIndex, merkleProof, confirmations)
}

// VerifxTX is a paid mutator transaction binding the contract method 0xa6feda9b.
//
// Solidity: function verifxTX(bytes32 txid, uint256 txBlockHeight, uint256 txIndex, bytes merkleProof, uint256 confirmations) returns(bool)
func (_BTCRelay *BTCRelayTransactorSession) VerifxTX(txid [32]byte, txBlockHeight *big.Int, txIndex *big.Int, merkleProof []byte, confirmations *big.Int) (*types.Transaction, error) {
	return _BTCRelay.Contract.VerifxTX(&_BTCRelay.TransactOpts, txid, txBlockHeight, txIndex, merkleProof, confirmations)
}

// BTCRelayChainReorgIterator is returned from FilterChainReorg and is used to iterate over the raw logs and unpacked data for ChainReorg events raised by the BTCRelay contract.
type BTCRelayChainReorgIterator struct {
	Event *BTCRelayChainReorg // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BTCRelayChainReorgIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BTCRelayChainReorg)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BTCRelayChainReorg)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BTCRelayChainReorgIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BTCRelayChainReorgIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BTCRelayChainReorg represents a ChainReorg event raised by the BTCRelay contract.
type BTCRelayChainReorg struct {
	NewChainTip [32]byte
	StartHeight *big.Int
	ForkId      *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterChainReorg is a free log retrieval operation binding the contract event 0xb151eb0731e1e8f4bbdac427313bb7039fb39ed6e55bee53a652508bf070c5ed.
//
// Solidity: event ChainReorg(bytes32 indexed newChainTip, uint256 indexed startHeight, uint256 indexed forkId)
func (_BTCRelay *BTCRelayFilterer) FilterChainReorg(opts *bind.FilterOpts, newChainTip [][32]byte, startHeight []*big.Int, forkId []*big.Int) (*BTCRelayChainReorgIterator, error) {

	var newChainTipRule []interface{}
	for _, newChainTipItem := range newChainTip {
		newChainTipRule = append(newChainTipRule, newChainTipItem)
	}
	var startHeightRule []interface{}
	for _, startHeightItem := range startHeight {
		startHeightRule = append(startHeightRule, startHeightItem)
	}
	var forkIdRule []interface{}
	for _, forkIdItem := range forkId {
		forkIdRule = append(forkIdRule, forkIdItem)
	}

	logs, sub, err := _BTCRelay.contract.FilterLogs(opts, "ChainReorg", newChainTipRule, startHeightRule, forkIdRule)
	if err != nil {
		return nil, err
	}
	return &BTCRelayChainReorgIterator{contract: _BTCRelay.contract, event: "ChainReorg", logs: logs, sub: sub}, nil
}

// WatchChainReorg is a free log subscription operation binding the contract event 0xb151eb0731e1e8f4bbdac427313bb7039fb39ed6e55bee53a652508bf070c5ed.
//
// Solidity: event ChainReorg(bytes32 indexed newChainTip, uint256 indexed startHeight, uint256 indexed forkId)
func (_BTCRelay *BTCRelayFilterer) WatchChainReorg(opts *bind.WatchOpts, sink chan<- *BTCRelayChainReorg, newChainTip [][32]byte, startHeight []*big.Int, forkId []*big.Int) (event.Subscription, error) {

	var newChainTipRule []interface{}
	for _, newChainTipItem := range newChainTip {
		newChainTipRule = append(newChainTipRule, newChainTipItem)
	}
	var startHeightRule []interface{}
	for _, startHeightItem := range startHeight {
		startHeightRule = append(startHeightRule, startHeightItem)
	}
	var forkIdRule []interface{}
	for _, forkIdItem := range forkId {
		forkIdRule = append(forkIdRule, forkIdItem)
	}

	logs, sub, err := _BTCRelay.contract.WatchLogs(opts, "ChainReorg", newChainTipRule, startHeightRule, forkIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BTCRelayChainReorg)
				if err := _BTCRelay.contract.UnpackLog(event, "ChainReorg", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseChainReorg is a log parse operation binding the contract event 0xb151eb0731e1e8f4bbdac427313bb7039fb39ed6e55bee53a652508bf070c5ed.
//
// Solidity: event ChainReorg(bytes32 indexed newChainTip, uint256 indexed startHeight, uint256 indexed forkId)
func (_BTCRelay *BTCRelayFilterer) ParseChainReorg(log types.Log) (*BTCRelayChainReorg, error) {
	event := new(BTCRelayChainReorg)
	if err := _BTCRelay.contract.UnpackLog(event, "ChainReorg", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BTCRelayStoreForkIterator is returned from FilterStoreFork and is used to iterate over the raw logs and unpacked data for StoreFork events raised by the BTCRelay contract.
type BTCRelayStoreForkIterator struct {
	Event *BTCRelayStoreFork // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BTCRelayStoreForkIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BTCRelayStoreFork)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BTCRelayStoreFork)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BTCRelayStoreForkIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BTCRelayStoreForkIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BTCRelayStoreFork represents a StoreFork event raised by the BTCRelay contract.
type BTCRelayStoreFork struct {
	BlockHash   [32]byte
	BlockHeight *big.Int
	ForkId      *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStoreFork is a free log retrieval operation binding the contract event 0x97a8a4a3fa720a16b01757bf95f6482f4601e4cb3d3afe4facfb9f1fe6a87613.
//
// Solidity: event StoreFork(bytes32 indexed blockHash, uint256 indexed blockHeight, uint256 indexed forkId)
func (_BTCRelay *BTCRelayFilterer) FilterStoreFork(opts *bind.FilterOpts, blockHash [][32]byte, blockHeight []*big.Int, forkId []*big.Int) (*BTCRelayStoreForkIterator, error) {

	var blockHashRule []interface{}
	for _, blockHashItem := range blockHash {
		blockHashRule = append(blockHashRule, blockHashItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}
	var forkIdRule []interface{}
	for _, forkIdItem := range forkId {
		forkIdRule = append(forkIdRule, forkIdItem)
	}

	logs, sub, err := _BTCRelay.contract.FilterLogs(opts, "StoreFork", blockHashRule, blockHeightRule, forkIdRule)
	if err != nil {
		return nil, err
	}
	return &BTCRelayStoreForkIterator{contract: _BTCRelay.contract, event: "StoreFork", logs: logs, sub: sub}, nil
}

// WatchStoreFork is a free log subscription operation binding the contract event 0x97a8a4a3fa720a16b01757bf95f6482f4601e4cb3d3afe4facfb9f1fe6a87613.
//
// Solidity: event StoreFork(bytes32 indexed blockHash, uint256 indexed blockHeight, uint256 indexed forkId)
func (_BTCRelay *BTCRelayFilterer) WatchStoreFork(opts *bind.WatchOpts, sink chan<- *BTCRelayStoreFork, blockHash [][32]byte, blockHeight []*big.Int, forkId []*big.Int) (event.Subscription, error) {

	var blockHashRule []interface{}
	for _, blockHashItem := range blockHash {
		blockHashRule = append(blockHashRule, blockHashItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}
	var forkIdRule []interface{}
	for _, forkIdItem := range forkId {
		forkIdRule = append(forkIdRule, forkIdItem)
	}

	logs, sub, err := _BTCRelay.contract.WatchLogs(opts, "StoreFork", blockHashRule, blockHeightRule, forkIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BTCRelayStoreFork)
				if err := _BTCRelay.contract.UnpackLog(event, "StoreFork", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStoreFork is a log parse operation binding the contract event 0x97a8a4a3fa720a16b01757bf95f6482f4601e4cb3d3afe4facfb9f1fe6a87613.
//
// Solidity: event StoreFork(bytes32 indexed blockHash, uint256 indexed blockHeight, uint256 indexed forkId)
func (_BTCRelay *BTCRelayFilterer) ParseStoreFork(log types.Log) (*BTCRelayStoreFork, error) {
	event := new(BTCRelayStoreFork)
	if err := _BTCRelay.contract.UnpackLog(event, "StoreFork", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BTCRelayStoreHeaderIterator is returned from FilterStoreHeader and is used to iterate over the raw logs and unpacked data for StoreHeader events raised by the BTCRelay contract.
type BTCRelayStoreHeaderIterator struct {
	Event *BTCRelayStoreHeader // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BTCRelayStoreHeaderIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BTCRelayStoreHeader)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BTCRelayStoreHeader)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BTCRelayStoreHeaderIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BTCRelayStoreHeaderIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BTCRelayStoreHeader represents a StoreHeader event raised by the BTCRelay contract.
type BTCRelayStoreHeader struct {
	BlockHash   [32]byte
	BlockHeight *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterStoreHeader is a free log retrieval operation binding the contract event 0x6080b2cdc7fc4777ed1e1066af5de1df45ae9186adbdb7aec21fde27a3e17e4c.
//
// Solidity: event StoreHeader(bytes32 indexed blockHash, uint256 indexed blockHeight)
func (_BTCRelay *BTCRelayFilterer) FilterStoreHeader(opts *bind.FilterOpts, blockHash [][32]byte, blockHeight []*big.Int) (*BTCRelayStoreHeaderIterator, error) {

	var blockHashRule []interface{}
	for _, blockHashItem := range blockHash {
		blockHashRule = append(blockHashRule, blockHashItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _BTCRelay.contract.FilterLogs(opts, "StoreHeader", blockHashRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &BTCRelayStoreHeaderIterator{contract: _BTCRelay.contract, event: "StoreHeader", logs: logs, sub: sub}, nil
}

// WatchStoreHeader is a free log subscription operation binding the contract event 0x6080b2cdc7fc4777ed1e1066af5de1df45ae9186adbdb7aec21fde27a3e17e4c.
//
// Solidity: event StoreHeader(bytes32 indexed blockHash, uint256 indexed blockHeight)
func (_BTCRelay *BTCRelayFilterer) WatchStoreHeader(opts *bind.WatchOpts, sink chan<- *BTCRelayStoreHeader, blockHash [][32]byte, blockHeight []*big.Int) (event.Subscription, error) {

	var blockHashRule []interface{}
	for _, blockHashItem := range blockHash {
		blockHashRule = append(blockHashRule, blockHashItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _BTCRelay.contract.WatchLogs(opts, "StoreHeader", blockHashRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BTCRelayStoreHeader)
				if err := _BTCRelay.contract.UnpackLog(event, "StoreHeader", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStoreHeader is a log parse operation binding the contract event 0x6080b2cdc7fc4777ed1e1066af5de1df45ae9186adbdb7aec21fde27a3e17e4c.
//
// Solidity: event StoreHeader(bytes32 indexed blockHash, uint256 indexed blockHeight)
func (_BTCRelay *BTCRelayFilterer) ParseStoreHeader(log types.Log) (*BTCRelayStoreHeader, error) {
	event := new(BTCRelayStoreHeader)
	if err := _BTCRelay.contract.UnpackLog(event, "StoreHeader", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BTCRelayVerityTransactionIterator is returned from FilterVerityTransaction and is used to iterate over the raw logs and unpacked data for VerityTransaction events raised by the BTCRelay contract.
type BTCRelayVerityTransactionIterator struct {
	Event *BTCRelayVerityTransaction // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BTCRelayVerityTransactionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BTCRelayVerityTransaction)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BTCRelayVerityTransaction)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BTCRelayVerityTransactionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BTCRelayVerityTransactionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BTCRelayVerityTransaction represents a VerityTransaction event raised by the BTCRelay contract.
type BTCRelayVerityTransaction struct {
	Txid        [32]byte
	BlockHeight *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterVerityTransaction is a free log retrieval operation binding the contract event 0x177452b46e7e4d1f6700a6e9e0c10cecb0552e86e904e5d98c5f41686ca09142.
//
// Solidity: event VerityTransaction(bytes32 indexed txid, uint256 indexed blockHeight)
func (_BTCRelay *BTCRelayFilterer) FilterVerityTransaction(opts *bind.FilterOpts, txid [][32]byte, blockHeight []*big.Int) (*BTCRelayVerityTransactionIterator, error) {

	var txidRule []interface{}
	for _, txidItem := range txid {
		txidRule = append(txidRule, txidItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _BTCRelay.contract.FilterLogs(opts, "VerityTransaction", txidRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return &BTCRelayVerityTransactionIterator{contract: _BTCRelay.contract, event: "VerityTransaction", logs: logs, sub: sub}, nil
}

// WatchVerityTransaction is a free log subscription operation binding the contract event 0x177452b46e7e4d1f6700a6e9e0c10cecb0552e86e904e5d98c5f41686ca09142.
//
// Solidity: event VerityTransaction(bytes32 indexed txid, uint256 indexed blockHeight)
func (_BTCRelay *BTCRelayFilterer) WatchVerityTransaction(opts *bind.WatchOpts, sink chan<- *BTCRelayVerityTransaction, txid [][32]byte, blockHeight []*big.Int) (event.Subscription, error) {

	var txidRule []interface{}
	for _, txidItem := range txid {
		txidRule = append(txidRule, txidItem)
	}
	var blockHeightRule []interface{}
	for _, blockHeightItem := range blockHeight {
		blockHeightRule = append(blockHeightRule, blockHeightItem)
	}

	logs, sub, err := _BTCRelay.contract.WatchLogs(opts, "VerityTransaction", txidRule, blockHeightRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BTCRelayVerityTransaction)
				if err := _BTCRelay.contract.UnpackLog(event, "VerityTransaction", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVerityTransaction is a log parse operation binding the contract event 0x177452b46e7e4d1f6700a6e9e0c10cecb0552e86e904e5d98c5f41686ca09142.
//
// Solidity: event VerityTransaction(bytes32 indexed txid, uint256 indexed blockHeight)
func (_BTCRelay *BTCRelayFilterer) ParseVerityTransaction(log types.Log) (*BTCRelayVerityTransaction, error) {
	event := new(BTCRelayVerityTransaction)
	if err := _BTCRelay.contract.UnpackLog(event, "VerityTransaction", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SafeMathABI is the input ABI used to generate the binding from.
const SafeMathABI = "[]"

// SafeMathBin is the compiled bytecode used for deploying new contracts.
var SafeMathBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820265971a60ce65d3ed0e9eb81da3a1cddecc06d15f7346d777d423511ccf1981464736f6c63430005100032"

// DeploySafeMath deploys a new Ethereum contract, binding an instance of SafeMath to it.
func DeploySafeMath(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SafeMath, error) {
	parsed, err := abi.JSON(strings.NewReader(SafeMathABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SafeMathBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SafeMath{SafeMathCaller: SafeMathCaller{contract: contract}, SafeMathTransactor: SafeMathTransactor{contract: contract}, SafeMathFilterer: SafeMathFilterer{contract: contract}}, nil
}

// SafeMath is an auto generated Go binding around an Ethereum contract.
type SafeMath struct {
	SafeMathCaller     // Read-only binding to the contract
	SafeMathTransactor // Write-only binding to the contract
	SafeMathFilterer   // Log filterer for contract events
}

// SafeMathCaller is an auto generated read-only Go binding around an Ethereum contract.
type SafeMathCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SafeMathTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SafeMathFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SafeMathSession struct {
	Contract     *SafeMath         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SafeMathCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SafeMathCallerSession struct {
	Contract *SafeMathCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// SafeMathTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SafeMathTransactorSession struct {
	Contract     *SafeMathTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// SafeMathRaw is an auto generated low-level Go binding around an Ethereum contract.
type SafeMathRaw struct {
	Contract *SafeMath // Generic contract binding to access the raw methods on
}

// SafeMathCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SafeMathCallerRaw struct {
	Contract *SafeMathCaller // Generic read-only contract binding to access the raw methods on
}

// SafeMathTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SafeMathTransactorRaw struct {
	Contract *SafeMathTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSafeMath creates a new instance of SafeMath, bound to a specific deployed contract.
func NewSafeMath(address common.Address, backend bind.ContractBackend) (*SafeMath, error) {
	contract, err := bindSafeMath(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SafeMath{SafeMathCaller: SafeMathCaller{contract: contract}, SafeMathTransactor: SafeMathTransactor{contract: contract}, SafeMathFilterer: SafeMathFilterer{contract: contract}}, nil
}

// NewSafeMathCaller creates a new read-only instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathCaller(address common.Address, caller bind.ContractCaller) (*SafeMathCaller, error) {
	contract, err := bindSafeMath(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SafeMathCaller{contract: contract}, nil
}

// NewSafeMathTransactor creates a new write-only instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathTransactor(address common.Address, transactor bind.ContractTransactor) (*SafeMathTransactor, error) {
	contract, err := bindSafeMath(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SafeMathTransactor{contract: contract}, nil
}

// NewSafeMathFilterer creates a new log filterer instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathFilterer(address common.Address, filterer bind.ContractFilterer) (*SafeMathFilterer, error) {
	contract, err := bindSafeMath(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SafeMathFilterer{contract: contract}, nil
}

// bindSafeMath binds a generic wrapper to an already deployed contract.
func bindSafeMath(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SafeMathABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SafeMath *SafeMathRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SafeMath.Contract.SafeMathCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SafeMath *SafeMathRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SafeMath.Contract.SafeMathTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SafeMath *SafeMathRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SafeMath.Contract.SafeMathTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SafeMath *SafeMathCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SafeMath.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SafeMath *SafeMathTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SafeMath.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SafeMath *SafeMathTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SafeMath.Contract.contract.Transact(opts, method, params...)
}

// UtilsABI is the input ABI used to generate the binding from.
const UtilsABI = "[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"b\",\"type\":\"bytes\"}],\"name\":\"bytesToUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytesLE\",\"type\":\"bytes\"}],\"name\":\"flipBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"name\":\"slice\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_source\",\"type\":\"bytes\"}],\"name\":\"toBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// UtilsFuncSigs maps the 4-byte function signature to its string representation.
var UtilsFuncSigs = map[string]string{
	"02d06d05": "bytesToUint(bytes)",
	"7e64ee18": "flipBytes(bytes)",
	"e0041396": "slice(bytes,uint256,uint256)",
	"47f53431": "toBytes32(bytes)",
}

// UtilsBin is the compiled bytecode used for deploying new contracts.
var UtilsBin = "0x610554610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c806302d06d051461005b57806347f53431146101115780637e64ee18146101b5578063e0041396146102ce575b600080fd5b6100ff6004803603602081101561007157600080fd5b810190602081018135600160201b81111561008b57600080fd5b82018360208201111561009d57600080fd5b803590602001918460018302840111600160201b831117156100be57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610377945050505050565b60408051918252519081900360200190f35b6100ff6004803603602081101561012757600080fd5b810190602081018135600160201b81111561014157600080fd5b82018360208201111561015357600080fd5b803590602001918460018302840111600160201b8311171561017457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103bd945050505050565b610259600480360360208110156101cb57600080fd5b810190602081018135600160201b8111156101e557600080fd5b8201836020820111156101f757600080fd5b803590602001918460018302840111600160201b8311171561021857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103db945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029357818101518382015260200161027b565b50505050905090810190601f1680156102c05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610259600480360360608110156102e457600080fd5b810190602081018135600160201b8111156102fe57600080fd5b82018360208201111561031057600080fd5b803590602001918460018302840111600160201b8311171561033157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060200135610461565b600080805b83518110156103b4578060010184510360080260020a84828151811061039e57fe5b016020015160f81c02919091019060010161037c565b5090505b919050565b805160009082906103d25750600090506103b8565b50506020015190565b60608082516040519080825280601f01601f19166020018201604052801561040a576020820181803883390190505b50905060005b83518110156103b45783818151811061042557fe5b602001015160f81c60f81b82600183875103038151811061044257fe5b60200101906001600160f81b031916908160001a905350600101610410565b6060818301845110156104b1576040805162461bcd60e51b8152602060048201526013602482015272536c696365206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b6060821580156104cc57604051915060208201604052610516565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156105055780518352602092830192016104ed565b5050858452601f01601f1916604052505b5094935050505056fea265627a7a7231582017db80ab5392232e0f2038d11fdfb3686cf7e4bcfbe2f2bcbe03efdb13bc2ae764736f6c63430005100032"

// DeployUtils deploys a new Ethereum contract, binding an instance of Utils to it.
func DeployUtils(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Utils, error) {
	parsed, err := abi.JSON(strings.NewReader(UtilsABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(UtilsBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Utils{UtilsCaller: UtilsCaller{contract: contract}, UtilsTransactor: UtilsTransactor{contract: contract}, UtilsFilterer: UtilsFilterer{contract: contract}}, nil
}

// Utils is an auto generated Go binding around an Ethereum contract.
type Utils struct {
	UtilsCaller     // Read-only binding to the contract
	UtilsTransactor // Write-only binding to the contract
	UtilsFilterer   // Log filterer for contract events
}

// UtilsCaller is an auto generated read-only Go binding around an Ethereum contract.
type UtilsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UtilsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type UtilsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UtilsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type UtilsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UtilsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type UtilsSession struct {
	Contract     *Utils            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UtilsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type UtilsCallerSession struct {
	Contract *UtilsCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// UtilsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type UtilsTransactorSession struct {
	Contract     *UtilsTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UtilsRaw is an auto generated low-level Go binding around an Ethereum contract.
type UtilsRaw struct {
	Contract *Utils // Generic contract binding to access the raw methods on
}

// UtilsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type UtilsCallerRaw struct {
	Contract *UtilsCaller // Generic read-only contract binding to access the raw methods on
}

// UtilsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type UtilsTransactorRaw struct {
	Contract *UtilsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewUtils creates a new instance of Utils, bound to a specific deployed contract.
func NewUtils(address common.Address, backend bind.ContractBackend) (*Utils, error) {
	contract, err := bindUtils(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Utils{UtilsCaller: UtilsCaller{contract: contract}, UtilsTransactor: UtilsTransactor{contract: contract}, UtilsFilterer: UtilsFilterer{contract: contract}}, nil
}

// NewUtilsCaller creates a new read-only instance of Utils, bound to a specific deployed contract.
func NewUtilsCaller(address common.Address, caller bind.ContractCaller) (*UtilsCaller, error) {
	contract, err := bindUtils(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &UtilsCaller{contract: contract}, nil
}

// NewUtilsTransactor creates a new write-only instance of Utils, bound to a specific deployed contract.
func NewUtilsTransactor(address common.Address, transactor bind.ContractTransactor) (*UtilsTransactor, error) {
	contract, err := bindUtils(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &UtilsTransactor{contract: contract}, nil
}

// NewUtilsFilterer creates a new log filterer instance of Utils, bound to a specific deployed contract.
func NewUtilsFilterer(address common.Address, filterer bind.ContractFilterer) (*UtilsFilterer, error) {
	contract, err := bindUtils(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &UtilsFilterer{contract: contract}, nil
}

// bindUtils binds a generic wrapper to an already deployed contract.
func bindUtils(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(UtilsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Utils *UtilsRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Utils.Contract.UtilsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Utils *UtilsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Utils.Contract.UtilsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Utils *UtilsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Utils.Contract.UtilsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Utils *UtilsCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Utils.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Utils *UtilsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Utils.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Utils *UtilsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Utils.Contract.contract.Transact(opts, method, params...)
}

// BytesToUint is a free data retrieval call binding the contract method 0x02d06d05.
//
// Solidity: function bytesToUint(bytes b) pure returns(uint256)
func (_Utils *UtilsCaller) BytesToUint(opts *bind.CallOpts, b []byte) (*big.Int, error) {
	var out []interface{}
	err := _Utils.contract.Call(opts, &out, "bytesToUint", b)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BytesToUint is a free data retrieval call binding the contract method 0x02d06d05.
//
// Solidity: function bytesToUint(bytes b) pure returns(uint256)
func (_Utils *UtilsSession) BytesToUint(b []byte) (*big.Int, error) {
	return _Utils.Contract.BytesToUint(&_Utils.CallOpts, b)
}

// BytesToUint is a free data retrieval call binding the contract method 0x02d06d05.
//
// Solidity: function bytesToUint(bytes b) pure returns(uint256)
func (_Utils *UtilsCallerSession) BytesToUint(b []byte) (*big.Int, error) {
	return _Utils.Contract.BytesToUint(&_Utils.CallOpts, b)
}

// FlipBytes is a free data retrieval call binding the contract method 0x7e64ee18.
//
// Solidity: function flipBytes(bytes bytesLE) pure returns(bytes)
func (_Utils *UtilsCaller) FlipBytes(opts *bind.CallOpts, bytesLE []byte) ([]byte, error) {
	var out []interface{}
	err := _Utils.contract.Call(opts, &out, "flipBytes", bytesLE)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// FlipBytes is a free data retrieval call binding the contract method 0x7e64ee18.
//
// Solidity: function flipBytes(bytes bytesLE) pure returns(bytes)
func (_Utils *UtilsSession) FlipBytes(bytesLE []byte) ([]byte, error) {
	return _Utils.Contract.FlipBytes(&_Utils.CallOpts, bytesLE)
}

// FlipBytes is a free data retrieval call binding the contract method 0x7e64ee18.
//
// Solidity: function flipBytes(bytes bytesLE) pure returns(bytes)
func (_Utils *UtilsCallerSession) FlipBytes(bytesLE []byte) ([]byte, error) {
	return _Utils.Contract.FlipBytes(&_Utils.CallOpts, bytesLE)
}

// Slice is a free data retrieval call binding the contract method 0xe0041396.
//
// Solidity: function slice(bytes _bytes, uint256 _start, uint256 _length) pure returns(bytes)
func (_Utils *UtilsCaller) Slice(opts *bind.CallOpts, _bytes []byte, _start *big.Int, _length *big.Int) ([]byte, error) {
	var out []interface{}
	err := _Utils.contract.Call(opts, &out, "slice", _bytes, _start, _length)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Slice is a free data retrieval call binding the contract method 0xe0041396.
//
// Solidity: function slice(bytes _bytes, uint256 _start, uint256 _length) pure returns(bytes)
func (_Utils *UtilsSession) Slice(_bytes []byte, _start *big.Int, _length *big.Int) ([]byte, error) {
	return _Utils.Contract.Slice(&_Utils.CallOpts, _bytes, _start, _length)
}

// Slice is a free data retrieval call binding the contract method 0xe0041396.
//
// Solidity: function slice(bytes _bytes, uint256 _start, uint256 _length) pure returns(bytes)
func (_Utils *UtilsCallerSession) Slice(_bytes []byte, _start *big.Int, _length *big.Int) ([]byte, error) {
	return _Utils.Contract.Slice(&_Utils.CallOpts, _bytes, _start, _length)
}

// ToBytes32 is a free data retrieval call binding the contract method 0x47f53431.
//
// Solidity: function toBytes32(bytes _source) pure returns(bytes32 result)
func (_Utils *UtilsCaller) ToBytes32(opts *bind.CallOpts, _source []byte) ([32]byte, error) {
	var out []interface{}
	err := _Utils.contract.Call(opts, &out, "toBytes32", _source)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ToBytes32 is a free data retrieval call binding the contract method 0x47f53431.
//
// Solidity: function toBytes32(bytes _source) pure returns(bytes32 result)
func (_Utils *UtilsSession) ToBytes32(_source []byte) ([32]byte, error) {
	return _Utils.Contract.ToBytes32(&_Utils.CallOpts, _source)
}

// ToBytes32 is a free data retrieval call binding the contract method 0x47f53431.
//
// Solidity: function toBytes32(bytes _source) pure returns(bytes32 result)
func (_Utils *UtilsCallerSession) ToBytes32(_source []byte) ([32]byte, error) {
	return _Utils.Contract.ToBytes32(&_Utils.CallOpts, _source)
}
